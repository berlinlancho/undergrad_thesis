发送时间,视频内弹幕出现时间,弹幕文本
1676449013,279.87400,学废了
1676438661,321.93800,PvZ 禅境花园的BGM
1676434145,354.21000,niubi
1676431762,22.49900,堆栈，寄存器
1676430606,85.64000,外部混村
1676417995,216.41200,秒啊
1676413297,184.63900,模电突然发起攻
1676390915,350.95400,单片机
1676388532,102.04300,那寄存器不是更快？
1676385010,194.63500,秒
1676383556,149.61500,苹果的SLC缓存高达几十上百MB
1676373202,63.54900,寄存器
1676369693,314.13200,Python函数的参数事实上就是指针
1676353335,304.19300,听了半天才想起来 bgm是植物大战僵尸的 
1676348884,63.31100,寄存器
1676348704,241.02300,译码器
1676344657,52.44000,在cpu的缓存里吧
1676344052,198.27300,想起来做的跑马灯灯阵
1676340935,8.68300,虚拟内存地址
1676337874,327.07500,66666
1676337100,171.09200,开始数电
1676337012,177.33400,rs触发器
1676336965,205.68300,这是物理地址原理啊
1676332312,142.91800,我的第一台电脑128M内存SDRAM
1676327054,140.69000,计组原理
1676319707,134.90600,我不懂指针，我就懂的了这个？
1676318642,269.64300,计组好像有讲过
1676315687,166.24900,完，我有点看不懂纯计算机的
1676311934,73.39800,我的u没有三缓。。。
1676311034,261.72400,译码器一般都是低电平输出吧（
1676310718,47.25900,所以内存装系统断电重装
1676310310,344.52400,妙啊
1676307427,331.59900,这里不对吧，p=&a，*p=a
1676306486,253.89700,这里8是2的3次方
1676305397,30.61900,存储我的脑子里
1676305361,7.38000,我c是c语言
1676305334,109.24600,还得看栈有多大
1676304909,96.25300,可现在l3也才百兆容量!
1676303288,285.06600,数据总线也可以分时复用为地址线
1676303165,221.28200,妙啊
1676300903,38.44000,支持 开新课了
1676299509,17.27300,大一学的C语言，直到大三学完微机原理才搞清楚- -
1676297656,301.89700,2的幂
1676296960,246.49900,74LS138
1676296916,234.71700,秒啊
1676296599,80.08600,简称外存
1676296418,291.36000,单片机
1676296304,66.01800,寄存器呢（
1676295704,59.09800,CPU缓存
1676295650,8.49900,BGM是植物大战僵尸吧？
1676295620,158.50400,数电基础知识，sr锁存器
1676437497,236.19900,你说有没有一种可能，我们把它用来当寄存器用。
1676417366,66.87800,cache吗
1676385631,6.05900,c语言中的指针就是内存地址，存放内存地址的变量，就是指针变量，
1676385581,333.03200,没定义过指针变量？int *p = &a；
1676346608,73.53200,然而我们51能被称为缓存的只有8个（悲
1676337053,171.11200,机组啊各位
1676328594,122.26200,老  本  行
1676323231,177.77900,这应该说是计算机组成原理更合理吧
1676316099,31.45900,ram的数据缓冲区？
1676315862,247.20300,decoder
1676315330,9.61100,怎么半夜也有90个人看啊？我纯粹睡不着
1676309892,241.11900,总线
1676308875,63.29500,寄存器！
1676301443,80.38200,CPU能直接寻址的就叫内存，内存条毫无以为是内存，小容量的XOR闪存也往往直接寻址，是内存，NAND就没有直接寻址了是外存
1676300305,258.57900,我想起了三人表决了 数电
1676299013,270.26800,对
1676297763,262.53200,这个三八译码器可不可以这样理解，2的三次方是8，正好对应八种存储位置
1676297591,86.24700,居然是11代酷睿
1676295870,63.18400,L1 L2 L3级缓存
1676295851,4.88400,是指针
1676451552,150.51800,准确来讲DRAM应该利用G极电容效应存储的
1676448762,23.26900,看不懂就多看几遍
1676429054,270.74000,是这么理解的
1676402777,140.88800,Icode和Dcode？
1676388496,82.46300,不懂可以不说，咱别胡说。
1676385125,292.44100,L1级缓存的容量
1676373463,287.39900,地址总线？
1676372316,9.61800,学了一学期不知道
1676367579,19.99300,七海：指到你嘛嘴里
1676359908,236.62800,地址选通
1676351427,31.83800,栈区
1676349700,62.45100,寄存器
1676345482,9.89300,哈哈哈，我也觉得是糟粕，过于灵活，不讲武德
1676345283,102.50100,缓存基本和cpu核心同一个时钟节拍
1676343226,160.69900,二者不可得兼？
1676341725,4.75600,错了，是糟粕
1676334244,38.66100,机械硬盘表示不服
1676315778,179.22800,D-latch
1676315640,75.32800,回想起了被计组支配的恐惧
1676309252,328.34000,没学过电子，长知识了
1676309206,241.39900,妙啊
1676304742,62.87000,cache
1676304675,53.54100,缓存
1676303706,86.27900,片上外设和片外
1676303162,122.57900,数电！
1676302951,166.61100,c语言呢
1676302047,263.06000,这就是八卦！
1676299194,248.03800,妙啊
1676297116,62.29900,缓存
1676296481,51.54700,看编译器怎么翻译，如果指令集支持，那这变量就直接合成到指令里面
1676295836,4.18600,BGM：Zen Garden
1676295658,66.94900,L1L2L3缓存
1676445555,217.34200,布尔变量=01两位整数
1676439706,124.00600,flip-flop 拖孩
1676438902,143.22300,加起来，不到17MB好吧！
1676437542,271.14300,他好像需要很多个晶体管吧。
1676431877,61.41900,寄存器才是最快的
1676428344,322.25600,前面的单片机快别说话了
1676388852,315.82600,根本就胡说，地址都不一定对于存储器，在单片机里，地址可能对应一个端口。当你写一个地址的时候，可能一条机械臂的某一个关节就挥动起来了。
1676386916,201.93900,想起了被单片机支配的恐惧
1676383585,354.22300,我悟了
1676383525,333.30200,？？？ *p 赋值a的地址？？
1676382357,305.14600,听不懂，模电和数电已经忘了
1676353748,10.76600,好家伙，现在连编程也有讲。
1676351452,3.25800,妙啊
1676350259,242.23000,3-8译码器
1676346610,111.76700,什么暴躁老哥
1676346337,248.54300,数字电路太烧脑了
1676345515,187.55800,使能端
1676344270,231.56300,Excel上面的if函数矩阵？哈哈哈
1676340317,61.60900,寄存器
1676333949,82.62800,我都直接叫空间，然后描述是哪里的空间
1676316360,210.48100,阵列？pal？
1676304576,180.07300,不是说C语言指针吗
1676298795,259.61000,不行，我豬腦過載了，容我緩緩
1676297181,172.30500,逐渐忘了这期的标题
1676296745,68.05900,cache
1676296147,33.31900,这个980Pro好像出现好多次了吧
1676295848,75.73500,这里要特别说明：只有x86架构的cpu才分三级缓存
1676295320,87.77700,哈哈哈
1676437528,263.78300,怎么这么熟悉？
1676392452,40.21900,你这定义存在语法错误吧
1676387342,124.22700,这熟悉的触发器
1676373238,89.23900,相对来说
1676366510,2.78100,C语言中国人都会吧 doge
1676350215,168.54500,礼貌：你C语言？
1676348888,11.66500,这个地址不是真正的物理地址，是虚拟的内存地址
1676348783,238.45900,妙哇
1676348505,61.35900,CPU缓存
1676344724,34.91900,&a
1676344571,294.29000,搞了半天，我在excel上面写的东西叫译码器。 
1676331775,249.54300,出现了，喵喵怪
1676321917,160.88800,为毛我这个学渣听懂了一些
1676303779,68.41900,cache
1676303737,0.00000,我一开始学的时候以为是鼠标…
1676297396,84.04100,x64也有
1676297351,26.27800,这句是完全合法的
1676295835,61.26000,cache
1676439738,90.34300,效能过于普通，建议提频压一压时序
1676434373,12.22900,这说法有问题
1676420799,1.88800,什么，你不是电路区up吗？怎么突然讲起C了？！（doge）
1676388779,303.93800,终于回来了
1676384641,0.48900,如果想彻底理解指针 还是推荐B站：蓬蓬学长
1676383615,333.30200,*p 这里错误的。
1676375900,121.71300,暴躁老哥说的对吗
1676352688,84.15800,内存是相对于硬盘储存说的
1676350666,156.24600,虚拟内存：我走了
1676350106,124.86700,d触发器
1676349970,69.86500,CACHE 死城之谜（doge）
1676349545,12.77800,指针糟粕可还行，没指针你LOL连10帧都上不去
1676346202,271.93600,二的三次
1676344188,197.25200,这不就是我玩excel上面的矩阵吗？
1676339726,35.34600,980E PRO
1676339400,227.03400,这非门没画反？
1676338761,55.23000,cpu缓存
1676338726,249.85500,38译码器
1676332895,180.41100,SR锁存器
1676331073,290.15000,原来如此终于懂了
1676314325,330.71400,妙啊
1676314164,77.23100,多处理器可见性问题来喽
1676310872,173.16900,没有跑题，地址这东西，不讲硬件是理解不了的
1676309335,238.60700,秒啊
1676306349,60.43600,立即推，cpu寄存器
1676303949,60.66100,寄存器
1676299877,264.81600,就是二进制输入发
1676296593,22.26300,搞清楚地址是干嘛用的，为什么要用到地址就入门了
1676295581,245.59300,喵呀
1676454314,192.91100,16位数据线最多只能读出或写入32kb。
1676446346,126.12500,这我可太熟悉了
1676446270,70.52500,cache
1676388694,250.21800,这下绕到数电了
1676386393,92.82800,内存延迟高了，压一压~
1676383680,273.83100,Switch
1676383316,117.25000,计算机组成原理DNA动了
1676353790,205.19900,突然忘记指针
1676353214,29.77500,《深入理解》，你在这说入门，是为了什么，刷存在感？
1676351439,355.04300,妙啊
1676350507,35.70100,一级缓存（bushi
1676348662,212.31900,猜到了
1676344070,343.76600,明白了！
1676341399,13.09900,指针是一个储存地址的变量
1676341299,169.22400,时钟jk触发器
1676332570,165.61900,编码
1676316285,181.96100,好，可以列真值表了
1676314107,40.59100,一级缓存
1676310996,245.98000,74LS138(
1676310974,232.93900,竞争-冒险现象？
1676306855,60.21900,一级缓存
1676302429,0.48400,《  爱  上  C  语  言  》
1676302315,300.21900,我深刻了！
1676301665,84.75600,我們這叫記憶體 緩存叫快取
1676299474,60.22100,寄存器
1676299325,316.49400,这个是硬件层面的，从C的层面来看，还有好多知识，欢迎大家去我AaaGss的主页看我的C指针教程，正在更新中
1676297977,77.45900,ram和rom
1676297203,323.23100,卧槽，6
1676297013,60.26500,cpu缓存呗
1676295480,218.36600,啊~~与或非看着就脑壳大，还有逻辑运算，简直了
1676295397,174.03600,这不是d触发器吗
1676453428,268.37000,秒啊
1676450806,77.78200,高速缓存
1676448845,72.97600,就是寄存器吧？
1676422390,15.92700,nullporinterexception
1676377486,14.98600,对于那些不想了解底层的人来说的确很麻烦，你讲道理必被杠
1676372772,142.78100,内存调用的是电容，需要刷新，好像只能存20us
1676334325,57.10800,苹果那个是几百GB每秒
1676332781,0.24200,妙啊
1676318462,182.24100,但是这就是指针的原理啊，没毛病的
1676310076,0.21200,没错，这叫初始化指针！
1676307806,37.86000,速度是什么意思？
1676304959,245.99000,38译码器
1676304814,131.21000,ttl啊
1676300072,60.01000,寄存器
1676298370,274.69700,妙啊
1676296307,84.87300,有CPU设计有关和啥构架没关系
1676296020,60.18700,L1L2L3L4缓存？
1676295901,250.45900,74HC595
1676295775,238.82500,妙啊
1676446411,183.63500,这是rs触发器
1676387187,85.60100,我设置的关机cpu不通电的那种，结果每次开机都得三四分钟（cpu通电的关机开机就几秒）
1676352255,251.19200,半死不活的知识攻击了我
1676348263,45.36500,寄存器
1676343055,0.00000,我猜跟虚拟内存 物理内存有关
1676306340,59.24100,立即推寄存器
1676445603,260.85000,译码器里是不是也要有译码器（
1676439047,70.85200,说实话，女人搞这个……
1676424972,90.37900,胡说八道吗
1676417807,13.93900,指谁谁怀孕
1676387326,253.49800,数电烧脑的兄弟，我还是觉得模电更痛苦
1676386738,328.17900,懵逼
1676386699,14.33900,不要当梗小鬼
1676383288,57.23700,传输速度
1676377860,352.89400,6666666
1676356182,349.40200,悟了
1676353726,18.47100,讲得太好了，深入浅出
1676352015,60.33600,擦车
1676351276,23.23000,对，鬼东西！
1676350579,101.50200,5800X3d L3甚至96MB
1676349177,152.82200,外存慢是因为寻址吧
1676347413,346.45700,求BGM
1676346215,47.82200,flash
1676345648,284.59800,那么再加一级是不是能更少输入
1676344966,64.64700,擦车
1676342291,294.73900,数电和计组
1676341094,272.97300,数字电路的知识
1676340731,275.24000,数字电路
1676340211,2.52000,、
1676335877,347.61700,学会了，三连！
1676330287,80.83000,数电和计算机基础的内容
1676328719,240.46000,喵啊
1676320338,79.29900,别瞎讲
1676320290,49.37900,这么看也不是遥不可及
1676316143,63.27900,片内
1676311710,265.72100,离散数学
1676311346,91.42000,14nm坚守者
1676309176,332.05100,↑这里没问题，定义的*不是取值，而是定义指针的标志
1676306426,122.55900,机组
1676305054,30.04300,啥是变量
1676300292,254.89900,苗啊！
1676299764,256.23300,BIN转独热码
1676298978,166.96800,本以为进来是学C语言 的，结果是学数电
1676298301,1.40400,封面就错了，p = &a 
1676297910,159.48600,逐渐离题
1676296740,281.04400,是1KB吧，字幕是不是有问题
